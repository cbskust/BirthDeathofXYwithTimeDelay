# This code for step 3 
# We need rearrage this code as function to setup entire steps



# initial parameter 
B.X=0.05; B.Y=0.05; a = 18/5; b=3/5;a_A  =0.0001; b_A=0.0001;

#read data 
folder = "/Users/cbskust/Dropbox/2stepDDE/"
X = read.csv(file = paste(folder,"X",".csv",sep=""),header = T)
Y = read.csv(file = paste(folder,"Y",".csv",sep=""),header = T)
thin=10; # set time interval as i minute

sel = seq(1,nrow(X), by=thin)
min = mean(diff(X[sel,1]))
X = as.matrix(X[sel,-1])
Y = as.matrix(Y[sel,-1])

time = nrow(Y) - 1 # T
v.num =ncol(Y) # N


#sampling r_n1i
# Step 3.1
# Y.diff = apply(Y, 2, diff)
# r_n1i = Y.diff + matrix(rpois(length(Y[-nrow(Y),]),Y[-nrow(Y),]*B.Y),nrow = time)

impute_r <- function(y){
  Y.diff = diff(y)
  r_n1i = Y.diff + rpois(time,y[-(time+1)]*B.Y)
  return(r_n1i)
}


# calculating Calculating propensities for each tilde(X) & Ys 
# step 3.2

f1 <-function(x) pgamma(x,a+1,rate=b)
f2 <-function(x) pgamma(x-1,a+1,rate=b)
f3 <-function(x) x*pgamma(x,a,rate=b)
f4 <-function(x) x*pgamma(x-1,a,rate=b)
for (m in 0:(time-1)){
  GA[(m+1),1] = integrate(f1, m, m+1)$value
  GA[(m+1),2] = integrate(f2, m, m+1)$value
  GA[(m+1),3] = integrate(f3, m, m+1)$value
  GA[(m+1),4] = integrate(f4, m, m+1)$value
}


KI <- function(x){
  # GA is a matrix, each row is the integration of gamma cdf or t*(gamma cdf) between m & m+1
  GA=matrix(0,nrow = time, ncol=4) 
  # kappa is a vector, saving sum_{m=0}^{i}kappa(m)
  kappa = rep(0,time)
  for (i in 0:(time-1)){
    k=0
    for (m in 0:i){
      x1 = x[(i+1)-m]; x2 = x[(i+1-m+1)];
      k = k + (x1-x2)*a/b*(GA[m+1,1]-GA[m+1,2])+(1-x1+x2)*(GA[m+1,3]-GA[m+1,4])
    }
    kappa[i+1] = k
  }
  return(kappa)
}


# sampling tilde(A)
# step 3.3 
r_1 = 0
kappa = 0
for(n in 1:v.num){
  r_1 = sum(r_1, sum(impute_r(Y[,n])))  
  kappa = sum(kappa, sum(KI(X[,n])))
}
A =rgamma(r_1+a_A, kappa+b_A)

